@model IEnumerable<Enrollment>
@{
    ViewData["Title"] = "Enrollments";
}

<div class="container-fluid">
  <div class="row min-vh-100">
    <div class="col-md-2 border-end bg-light py-3">
      @await Component.InvokeAsync("CoursesMenu")
    </div>
    
    <div class="col-md-10">
      <div class="card shadow-lg border-0 my-3">
        <div class="card-header bg-primary text-white py-3">
          <div class="d-flex justify-content-between align-items-center">
            <h1 class="h3 mb-0">@ViewData["Title"]</h1>
            <button type="button" class="btn btn-light" data-bs-toggle="modal" data-bs-target="#createEnrollmentModal">
              <i class="bi bi-plus-circle me-2"></i> Create New Enrollment
            </button>
          </div>
        </div>
        <div class="card-body">
          @if (ViewBag.Message != null)
          {
            <div class="alert @(ViewBag.Success == true ? "alert-success" : "alert-danger") alert-dismissible fade show shadow-sm mb-4" role="alert">
              <i class="bi @(ViewBag.Success == true ? "bi-check-circle" : "bi-exclamation-triangle") me-2"></i>
              @ViewBag.Message
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          }

          @if (!Model.Any())
          {
            <div class="alert alert-info" role="alert">
              <i class="bi bi-info-circle me-2"></i> No enrollments found. Click the "Create New Enrollment" button to add one.
            </div>
          }
          else
          {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover align-middle">
                                <thead class="table-light">
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.EnrollmentId)</th>
                                        <th>Student Name</th>
                                        <th>Course Name</th>
                                        <th>@Html.DisplayNameFor(model => model.EnrollmentDate)</th>
                                        <th>@Html.DisplayNameFor(model => model.Grade)</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>@Html.DisplayFor(modelItem => item.EnrollmentId)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Student.FirstName)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Course.CourseName)</td>
                                            <td>@Html.DisplayFor(modelItem => item.EnrollmentDate)</td>
                                            <td>
                                                @if (item.Grade.HasValue)
                                                {
                                                    <span class="badge bg-success">@Html.DisplayFor(modelItem => item.Grade)</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-warning text-dark">Not graded</span>
                                                }
                                                <button type="button" class="btn btn-sm btn-outline-primary ms-2"
                                                    title="Edit Grade" data-bs-toggle="modal" data-bs-target="#editGradeModal"
                                                    data-enrollment-id="@item.EnrollmentId"
                                                    data-current-grade="@(item.Grade?.ToString() ?? "")"
                                                    data-student-id="@item.StudentId" data-course-id="@item.CourseId"
                                                    data-enrollment-date="@(item.EnrollmentDate.ToString("yyyy-MM-dd") ?? "")">
                                                    <i class="bi bi-pencil-square"></i>
                                                    Edit Grade
                                                </button>
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <button type="button" class="btn btn-sm btn-outline-danger" title="Delete"
                                                        data-bs-toggle="modal" data-bs-target="#deleteModal"
                                                        data-enrollment-id="@item.EnrollmentId"
                                                        data-student-name="@item.Student.FirstName"
                                                        data-course-name="@item.Course.CourseName">
                                                        <i class="bi bi-trash"></i>
                                                        Delete
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Create Enrollment Modal -->
<div class="modal fade" id="createEnrollmentModal" tabindex="-1" aria-labelledby="createEnrollmentModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="createEnrollmentModalLabel">Create New Enrollment</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                    aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createEnrollmentForm" asp-action="Create" method="post">
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                    <input type="hidden" name="EnrollmentDate" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss")" />

                    <div class="mb-3">
                        <label for="studentId" class="form-label">Student</label>
                        <select id="studentId" name="StudentId" class="form-select" required>
                            <option value="">Select a student</option>
                            @foreach (var student in ViewBag.Students)
                            {
                                <option value="@int.Parse(student.Value)">@student.Text</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="CourseId" class="form-label">Course</label>
                        <select id="CourseId" name="CourseId" class="form-select" required>
                            <option value="">Select a course</option>
                            @foreach (var course in ViewBag.Courses)
                            {
                                <option value="@int.Parse(course.Value)">@course.Text</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveEnrollmentButton">Create Enrollment</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="bi bi-exclamation-triangle me-2"></i>Confirm Deletion
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                    aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the enrollment for <strong><span
                            id="studentNameSpan"></span></strong> in <strong><span id="courseNameSpan"></span></strong>?
                </p>
                <p class="text-danger mb-0"><small>This action cannot be undone.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" asp-action="Delete" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="enrollmentIdInput" name="id" value="" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Grade Modal -->
<div class="modal fade" id="editGradeModal" tabindex="-1" aria-labelledby="editGradeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="editGradeModalLabel">Edit Grade</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                    aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editGradeForm" asp-action="Edit" method="post">
                    <input type="hidden" id="editEnrollmentId" name="EnrollmentId" />
                    <input type="hidden" id="editStudentId" name="StudentId" />
                    <input type="hidden" id="editCourseId" name="CourseId" />
                    <input type="hidden" id="editEnrollmentDate" name="EnrollmentDate" />

                    <div class="mb-3">
                        <label for="Grade" class="form-label">Grade</label>
                        <input type="number" class="form-control" id="Grade" name="grade" step="0.1" min="0" max="100"
                            required />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveGradeButton">Save Changes</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .card {
            transition: all 0.3s ease-in-out;
        }

        .card:hover {
            box-shadow: 0 1rem 3rem rgba(0, 0, 0, .175) !important;
        }

        .table-hover tbody tr {
            transition: all 0.2s ease-in-out;
        }

        .table-hover tbody tr:hover {
            background-color: rgba(0, 0, 0, .075) !important;
        }

        .btn-group .btn {
            transition: all 0.2s ease-in-out;
        }

        .btn-group .btn:hover {
            transform: translateY(-2px);
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#deleteModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var enrollmentId = button.data('enrollment-id');
                var studentName = button.data('student-name');
                var courseName = button.data('course-name');
                var modal = $(this);
                modal.find('#studentNameSpan').text(studentName);
                modal.find('#courseNameSpan').text(courseName);
                modal.find('#enrollmentIdInput').val(enrollmentId);
            });

            $('#saveEnrollmentButton').on('click', function () {
                var form = $('#createEnrollmentForm');
                if (form[0].checkValidity()) {
                    form.submit();
                } else {
                    form[0].reportValidity();
                }
            });

            $('#editGradeModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var enrollmentId = button.data('enrollment-id');
                var currentGrade = button.data('current-grade');
                var studentId = button.data('student-id');
                var courseId = button.data('course-id');
                var enrollmentDate = button.data('enrollment-date');
                var modal = $(this);

                modal.find('#editEnrollmentId').val(enrollmentId);
                modal.find('#editStudentId').val(studentId);
                modal.find('#editCourseId').val(courseId);
                modal.find('#editEnrollmentDate').val(enrollmentDate);
                modal.find('#Grade').val(currentGrade);
            });

            $('#saveGradeButton').on('click', function () {
                var form = $('#editGradeForm');
                if (form[0].checkValidity()) {
                    form.submit();
                } else {
                    form[0].reportValidity();
                }
            });

            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });

            $('.card').hide().fadeIn(1000);
        });
    </script>
}