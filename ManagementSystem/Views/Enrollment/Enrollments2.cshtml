@model IEnumerable<Enrollment>
@{
    ViewData["Title"] = "Enrollments";
}

<div class="container-fluid mt-4">
    <h1 class="mb-4">@ViewData["Title"]</h1>

    <div class="mb-3">
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createEnrollmentModal">
            <i class="bi bi-plus-circle"></i> Create New Enrollment
        </button>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info" role="alert">
            No enrollments found. Click the "Create New Enrollment" button to add one.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-light">
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.EnrollmentId)</th>
                        <th>@Html.DisplayNameFor(model => model.StudentId)</th>
                        <th>Student Name</th>
                        <th>@Html.DisplayNameFor(model => model.CourseId)</th>
                        <th>Course Name</th>
                        <th>@Html.DisplayNameFor(model => model.EnrollmentDate)</th>
                        <th>@Html.DisplayNameFor(model => model.Grade)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.EnrollmentId)</td>
                            <td>@Html.DisplayFor(modelItem => item.StudentId)</td>
                            <td>@Html.DisplayFor(modelItem => item.Student.FirstName)</td>
                            <td>@Html.DisplayFor(modelItem => item.CourseId)</td>
                            <td>@Html.DisplayFor(modelItem => item.Course.CourseName)</td>
                            <td>@Html.DisplayFor(modelItem => item.EnrollmentDate)</td>
                            <td>
                                @if (item.Grade.HasValue)
                                {
                                    @Html.DisplayFor(modelItem => item.Grade)
                                }
                                else
                                {
                                    <span class="text-muted">Not graded</span>
                                }
								<button type="button" class="btn btn-sm btn-outline-secondary ms-2" title="Edit Grade" 
                                        data-bs-toggle="modal" data-bs-target="#editGradeModal" 
                                        data-enrollment-id="@item.EnrollmentId"
                                        data-current-grade="@(item.Grade?.ToString() ?? "")">
                                    <i class="bi bi-pencil-square"></i>
									Edit Grade
                                </button>
                            </td>
                            <td>
                               <div class="btn-group" role="group">
									<button type="button" class="btn btn-sm btn-outline-danger" title="Delete"
										data-bs-toggle="modal" data-bs-target="#deleteModal"
										data-enrollment-id="@item.EnrollmentId" data-student-name="@item.Student.FirstName"
										data-course-name="@item.Course.CourseName">
										<i class="bi bi-trash"></i>
										Delete
									</button>
								</div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<!-- Create Enrollment Modal -->
<div class="modal fade" id="createEnrollmentModal" tabindex="-1" aria-labelledby="createEnrollmentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createEnrollmentModalLabel">Create New Enrollment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createEnrollmentForm" asp-action="Create" method="post">
                    <div class="mb-3">
                        <label for="studentId" class="form-label">Student</label>
                        <select id="studentId" name="StudentId" class="form-select" required>
                            <option value="">Select a student</option>
                            @foreach (var student in ViewBag.Students)
                            {
                                <option value="@student.Value">@student.Text</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="courseId" class="form-label">Course</label>
                        <select id="courseId" name="CourseId" class="form-select" required>
                            <option value="">Select a course</option>
                            @foreach (var course in ViewBag.Courses)
                            {
                                <option value="@course.Value">@course.Text</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveEnrollmentButton">Create Enrollment</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the enrollment for <span id="studentNameSpan"></span> in <span id="courseNameSpan"></span>?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" asp-action="Delete" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="enrollmentIdInput" name="id" value="" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Grade Modal -->
<div class="modal fade" id="editGradeModal" tabindex="-1" aria-labelledby="editGradeModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="editGradeModalLabel">Edit Grade</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<form id="editGradeForm">
					<input type="hidden" id="editEnrollmentId" name="enrollmentId" />
					<div class="mb-3">
						<label for="editGrade" class="form-label">Grade</label>
						<input type="number" class="form-control" id="editGrade" name="grade" step="0.1" min="0"
							max="100" required />
					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-primary" id="saveGradeButton">Save Changes</button>
			</div>
		</div>
	</div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#deleteModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var enrollmentId = button.data('enrollment-id');
                var studentName = button.data('student-name');
                var courseName = button.data('course-name');
                var modal = $(this);
                modal.find('#studentNameSpan').text(studentName);
                modal.find('#courseNameSpan').text(courseName);
                modal.find('#enrollmentIdInput').val(enrollmentId);
            });

            $('#saveEnrollmentButton').on('click', function() {
                var form = $('#createEnrollmentForm');
                if (form[0].checkValidity()) {
                    form.submit();
                } else {
                    form[0].reportValidity();
                }
            });

			$('#editGradeModal').on('show.bs.modal', function (event) {
				var button = $(event.relatedTarget);
				var enrollmentId = button.data('enrollment-id');
				var currentGrade = button.data('current-grade');
				var modal = $(this);
				modal.find('#editEnrollmentId').val(enrollmentId);
				modal.find('#editGrade').val(currentGrade);
			});

			$('#saveGradeButton').on('click', function () {
				var form = $('#editGradeForm');
				if (form[0].checkValidity()) {
					var enrollmentId = $('#editEnrollmentId').val();
					var newGrade = $('#editGrade').val();

					$.ajax({
						url: '@Url.Action("UpdateGrade", "Enrollment")',
						type: 'POST',
						data: { id: enrollmentId, grade: newGrade },
						success: function (result) {
							if (result.success) {
								$('#editGradeModal').modal('hide');
								// Update the grade in the table
								$(`tr[data-enrollment-id="${enrollmentId}"] td:nth-child(7)`).text(newGrade);
							} else {
								alert('Failed to update grade. Please try again.');
							}
						},
						error: function () {
							alert('An error occurred while updating the grade. Please try again.');
						}
					});
				} else {
					form[0].reportValidity();
				}
			});
        });
    </script>
}

